cmake_minimum_required(VERSION 3.18.0)

set(GIT_REPOSITORY https://github.com/pistacheio/pistache.git)
set(GIT_TAG 494e1bca9d435fbc6a81a56b365b953a2b63ac71)

set(PACKAGE_NAME Pistache)
set(PKG_CONFIG_NAME libpistache)
set(PACKAGE_PREFIX PISTACHE)
set(PACKAGE_EXPORT pistache::lib)

find_package(${PACKAGE_NAME} QUIET GLOBAL)
Set(FETCHCONTENT_QUIET FALSE)
if ( NOT ${PACKAGE_NAME}_FOUND )
    find_package(PkgConfig QUIET)
    if ( PkgConfig_FOUND )
       if( NOT CMAKE_FIND_ROOT_PATH )
          set(PKG_CONFIG_USE_CMAKE_PREFIX_PATH ON)
       else()
          message(STATUS "${CMAKE_FIND_ROOT_PATH}")
          foreach( dir IN LISTS CMAKE_FIND_ROOT_PATH)
            message(STATUS "Testing ${dir}")
            if(EXISTS "${dir}/lib/pkgconfig")
              message(STATUS "\t ${dir} Exists")
              STRING(APPEND FIND_ROOT_CONFIG_PATH ":${dir}/lib/pkgconfig")
            endif()
          endforeach()
          message(STATUS "set(ENV{PKG_CONFIG_PATH} \"$ENV{PKG_CONFIG_PATH}:${FIND_ROOT_CONFIG_PATH}\")")
          set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:${FIND_ROOT_CONFIG_PATH}")
       endif()
       message(STATUS "Looking for libpistache using pkg")
       pkg_search_module(${PACKAGE_NAME} IMPORTED_TARGET GLOBAL libpistache)
       if (${PACKAGE_NAME}_FOUND)
          message(STATUS "Creating Library ${PACKAGE_EXPORT} from PkgConfig::${PACKAGE_NAME}")
          add_library(${PACKAGE_EXPORT} ALIAS PkgConfig::${PACKAGE_NAME})
       endif()
    elseif ( NOT ${PACKAGE_NAME}_FOUND )
      message(STATUS "${PACKAGE_NAME} not found. Unbale to locate Pistache with out it")
  endif()
endif()

if (NOT ${PACKAGE_NAME}_FOUND)
    message(FATAL_ERROR "Unable to find ${PACKAGE_NAME} or fetch it from ${GIT_REPOSITROY}. 
    Check your network connection or install the ${PACKAGE_NAME} package and configure your CMAKE_PREFIX_PATH to ensure visibility
    https://cmake.org/cmake/help/latest/variable/CMAKE_PREFIX_PATH.html 
    https://cmake.org/cmake/help/latest/command/find_package.html#command:find_package")
endif()

